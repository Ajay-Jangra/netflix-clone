{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\reactPractice\\\\netflix\\\\src\\\\Banner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios'; // remember postman kind thing\n\nimport requests from './Requests';\nimport \"./Banner.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Banner() {\n  _s();\n\n  // first we need request   usestate is responsible for whatever  random movie gets selected at the top\n  const [movie, setMovie] = useState([]); //    useEffect is a peace of code which runs based on a given condition so in this case we want this run once when the Banner component load\n  // asynchronous function which makes a call to external api      \n  // fetchData    fetching the data\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchComedyMovies);\n      setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length)]);\n      return request;\n    }\n\n    fetchData();\n  }, []);\n  console.log(movie); // truncate fun just copy paste from stackoverflow\n  // {/* truncate just  set  read more ............ */}\n\n  function truncate(str, n) {\n    return (str === null || str === void 0 ? void 0 : str.length) > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"banner\",\n    style: {\n      backgroundSize: \"cover\",\n      backgroundImage: `url(\n                \"https://image.tmdb.org/t/p/original/${movie === null || movie === void 0 ? void 0 : movie.backdrop_path}\"\n            )`,\n      backgroundPosition: \"center center\"\n    },\n    children: [\"   \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner_contents\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"banner_title\",\n        children: (movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.orignal_name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner_buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" banner_button\",\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" banner_button\",\n        children: \"My List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"banner_description\",\n      children: truncate(movie === null || movie === void 0 ? void 0 : movie.overview, 150)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Banner, \"jmRb9xsBKsoKCGHCjtfP3JDQESc=\");\n\n_c = Banner;\nexport default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/reactPractice/netflix/src/Banner.js"],"names":["React","useState","useEffect","axios","requests","Banner","movie","setMovie","fetchData","request","get","fetchComedyMovies","data","results","Math","floor","random","length","console","log","truncate","str","n","substr","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","orignal_name","overview"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AAEA,OAAOC,KAAP,MAAkB,SAAlB,C,CAAiC;;AAEjC,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,cAAP;;;AACA,SAASC,MAAT,GAAkB;AAAA;;AACd;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBN,QAAQ,CAAC,EAAD,CAAjC,CAFc,CAIlB;AACA;AACA;;AACCC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeM,SAAf,GAA0B;AACzB,YAAMC,OAAO,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUN,QAAQ,CAACO,iBAAnB,CAAtB;AACEJ,MAAAA,QAAQ,CACNE,OAAO,CAACG,IAAR,CAAaC,OAAb,CACAC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcP,OAAO,CAACG,IAAR,CAAaC,OAAb,CAAqBI,MAA9C,CADA,CADM,CAAR;AAKA,aAAOR,OAAP;AACH;;AACAD,IAAAA,SAAS;AACZ,GAXQ,EAWN,EAXM,CAAT;AAaDU,EAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ,EApBkB,CAsBlB;AACA;;AACE,WAASc,QAAT,CAAkBC,GAAlB,EAAsBC,CAAtB,EAAwB;AACpB,WAAO,CAAAD,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEJ,MAAL,IAAYK,CAAZ,GAAcD,GAAG,CAACE,MAAJ,CAAW,CAAX,EAAaD,CAAC,GAAC,CAAf,IAAkB,KAAhC,GAAsCD,GAA7C;AACH;;AACC,sBACI;AAAQ,IAAA,SAAS,EAAE,QAAnB;AACA,IAAA,KAAK,EAAI;AACLG,MAAAA,cAAc,EAAC,OADV;AAELC,MAAAA,eAAe,EAAG;AAC9B,uDAAuDnB,KAD1B,aAC0BA,KAD1B,uBAC0BA,KAAK,CAAEoB,aAAc;AAC5E,cAJiB;AAKLC,MAAAA,kBAAkB,EAAE;AALf,KADT;AAAA,mCASI;AAAK,MAAA,SAAS,EAAE,iBAAhB;AAAA,6BAEI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBAA8B,CAAArB,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEsB,KAAP,MAAgBtB,KAAhB,aAAgBA,KAAhB,uBAAgBA,KAAK,CAAEuB,IAAvB,MAA+BvB,KAA/B,aAA+BA,KAA/B,uBAA+BA,KAAK,CAAEwB,YAAtC;AAA9B;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YATJ,eAcM;AAAK,MAAA,SAAS,EAAG,gBAAjB;AAAA,8BAEE;AAAQ,QAAA,SAAS,EAAG,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,SAAS,EAAG,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdN,eAqBI;AAAG,MAAA,SAAS,EAAE,oBAAd;AAAA,gBAGKV,QAAQ,CAACd,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEyB,QAAR,EAAiB,GAAjB;AAHb;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GAxDQ1B,M;;KAAAA,M;AA0DT,eAAeA,MAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\n\r\nimport axios from './axios' ;    // remember postman kind thing\r\n\r\nimport requests from './Requests';\r\nimport \"./Banner.css\";\r\nfunction Banner() {\r\n    // first we need request   usestate is responsible for whatever  random movie gets selected at the top\r\n    const [movie, setMovie]= useState([]);\r\n\r\n//    useEffect is a peace of code which runs based on a given condition so in this case we want this run once when the Banner component load\r\n// asynchronous function which makes a call to external api      \r\n// fetchData    fetching the data\r\n useEffect(() => {\r\n     async function fetchData(){\r\n      const request = await axios.get(requests.fetchComedyMovies)\r\n        setMovie(\r\n          request.data.results[\r\n          Math.floor(Math.random()*request.data.results.length)\r\n          ]\r\n        );\r\n        return request;\r\n    }\r\n     fetchData();\r\n }, []);\r\n\r\nconsole.log(movie)\r\n\r\n// truncate fun just copy paste from stackoverflow\r\n// {/* truncate just  set  read more ............ */}\r\n  function truncate(str,n){\r\n      return str?.length>n?str.substr(0,n-1)+\"...\":str;\r\n  }\r\n    return (\r\n        <header className =\"banner\"\r\n        style = {{\r\n            backgroundSize:\"cover\",\r\n            backgroundImage: `url(\r\n                \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n            )`,\r\n            backgroundPosition: \"center center\",\r\n         }}\r\n        >   { /*<<< backgroung image */}\r\n            <div className =\"banner_contents\">\r\n                    {/* title */}\r\n                <h1 className=\"banner_title\">{movie?.title || movie?.name || movie?.orignal_name }</h1>\r\n            </div>\r\n            \r\n              <div className = \"banner_buttons\">\r\n                    {/* div > 2 buttons */}\r\n                <button className = \" banner_button\">Play</button>\r\n                <button className = \" banner_button\">My List</button>\r\n              </div>\r\n            \r\n            {/* description */}\r\n            <p className= \"banner_description\">\r\n                {/* {movie?.overview} */}\r\n            {/* truncate just  set  read more ............ */}\r\n                {truncate(movie?.overview,150)}   \r\n            </p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n"]},"metadata":{},"sourceType":"module"}