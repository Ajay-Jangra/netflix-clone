{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\reactPractice\\\\netflix\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row({\n  title,\n  fetchUrl\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]); //  this is the way you declare a variable  using react hooks  in usestate give it a initial value that is emppty array []   for using useState we can add useState in import react \n  // a  snippt  of code which runs based on spacific condition and variable  after runing the useeffect   movie can be loaded on the app console \n\n  useEffect(() => {\n    //  in this comp we use axios   so import axios \n    async function fetchData() {\n      const request = await axios.get(fetchUrl); // we get this https://api.themoviedb.org/3/foo-bar/ trending / all / week ? api_key = ${API_KEY} & language=en-US\n\n      console.log(request.data.results);\n      setMovies(request.data.results); // what data str we get\n\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]); //  if [] ,  this tell that run ones when the row loads   don't run again     hear fetcthurl is use in this fxn input parameter   becuase  would't render the use effect   it will be must \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/reactPractice/netflix/src/Row.js"],"names":["React","useState","useEffect","axios","Row","title","fetchUrl","movies","setMovies","fetchData","request","get","console","log","data","results"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACC,OAAOC,KAAP,MAAkB,SAAlB;;;AACA,SAASC,GAAT,CAAa;AAACC,EAAAA,KAAD;AAASC,EAAAA;AAAT,CAAb,EAAiC;AAAA;;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC,CAD6B,CACoB;AACjD;;AACDC,EAAAA,SAAS,CAAC,MAAM;AAAkB;AAC9B,mBAAeO,SAAf,GAA0B;AACvB,YAAMC,OAAO,GAAE,MAAMP,KAAK,CAACQ,GAAN,CAAUL,QAAV,CAArB,CADuB,CAEvB;;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,IAAR,CAAaC,OAAzB;AACAP,MAAAA,SAAS,CAACE,OAAO,CAACI,IAAR,CAAaC,OAAd,CAAT,CAJuB,CAIe;;AACtC,aAAOL,OAAP;AACF;;AACDD,IAAAA,SAAS;AACZ,GATQ,EASN,CAACH,QAAD,CATM,CAAT,CAH8B,CAYZ;;AAClB,sBACI;AAAA,2BACK;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GArBSD,G;;KAAAA,G;AAuBT,eAAeA,GAAf","sourcesContent":["import React, { useState,useEffect } from 'react';\r\n import axios from './axios';\r\n function Row({title , fetchUrl}) {\r\n     const [movies, setMovies] = useState([]);        //  this is the way you declare a variable  using react hooks  in usestate give it a initial value that is emppty array []   for using useState we can add useState in import react \r\n     // a  snippt  of code which runs based on spacific condition and variable  after runing the useeffect   movie can be loaded on the app console \r\n    useEffect(() => {                 //  in this comp we use axios   so import axios \r\n        async function fetchData(){\r\n           const request =await axios.get(fetchUrl);\r\n           // we get this https://api.themoviedb.org/3/foo-bar/ trending / all / week ? api_key = ${API_KEY} & language=en-US\r\n           console.log(request.data.results);  \r\n           setMovies(request.data.results)  ;    // what data str we get\r\n           return request;\r\n        }\r\n        fetchData();   \r\n    }, [fetchUrl]);   //  if [] ,  this tell that run ones when the row loads   don't run again     hear fetcthurl is use in this fxn input parameter   becuase  would't render the use effect   it will be must \r\n    return (\r\n        <div>\r\n             <h1>{title}</h1>\r\n\r\n             {/* container->poster */}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n export default Row;\r\n"]},"metadata":{},"sourceType":"module"}